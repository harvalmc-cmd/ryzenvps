
#!/usr/bin/env bash
set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m' # No Color

print_header() { echo -e "\n${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}\n${CYAN} $1 ${NC}\n${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}\n"; }
print_status() { echo -e "${YELLOW}⏳ $1...${NC}"; }
print_success() { echo -e "${GREEN}✅ $1${NC}"; }
print_error() { echo -e "${RED}❌ $1${NC}"; }

animate_progress() {
    local pid=$1
    local spinstr='|/-\'
    local delay=0.1
    while kill -0 "$pid" 2>/dev/null; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

# ------------------------------
# Start
# ------------------------------
clear
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${CYAN}           🚀 PTERODACTYL PANEL UPDATER           ${NC}"
echo -e "${CYAN}                 by Nobita-hosting               ${NC}"
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}\n"

# Root check
if [[ $EUID -ne 0 ]]; then
    print_error "Please run this script as root or with sudo"
    exit 1
fi

# Go to panel dir
PANEL_DIR="/var/www/pterodactyl"
print_status "Changing to panel directory"
cd "$PANEL_DIR" || { print_error "Panel directory not found!"; exit 1; }
print_success "Changed to $PANEL_DIR"

# Maintenance mode
print_header "MAINTENANCE MODE"
print_status "Enabling maintenance mode"
php artisan down > /dev/null 2>&1 &
animate_progress $!
print_success "Maintenance mode enabled"

# Download & extract
print_header "DOWNLOADING UPDATE"
TMP_FILE="/tmp/panel_update.tar.gz"
print_status "Downloading latest release"
curl -L https://github.com/pterodactyl/panel/releases/latest/download/panel.tar.gz -o "$TMP_FILE"
print_success "Download completed"

print_status "Extracting files"
tar -xzf "$TMP_FILE" -C "$PANEL_DIR"
rm -f "$TMP_FILE"
print_success "Extraction completed"

# Permissions
print_header "PERMISSIONS SETUP"
chmod -R 755 storage/* bootstrap/cache
print_success "Permissions set correctly"

# Composer check & install dependencies
print_header "INSTALLING DEPENDENCIES"
if ! command -v composer >/dev/null 2>&1; then
    print_error "Composer not found! Please install composer first."
    exit 1
fi
composer install --no-dev --optimize-autoloader
print_success "PHP dependencies installed"

# Clear caches
print_header "CLEANING CACHE"
php artisan view:clear
php artisan config:clear
print_success "Caches cleared"

# Database migrations
print_header "DATABASE MIGRATION"
php artisan migrate --seed --force
print_success "Database migrations completed"

# Ownership
print_header "FILE OWNERSHIP"
chown -R www-data:www-data "$PANEL_DIR"
print_success "Ownership set to www-data"

# Queue workers
print_header "QUEUE MANAGEMENT"
php artisan queue:restart
print_success "Queue workers restarted"

# Bring panel online
print_header "FINISHING UPDATE"
php artisan up
print_success "Panel is back online"

# Completion message
clear
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${CYAN}           🎉 UPDATE COMPLETED SUCCESSFULLY!      ${NC}"
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
